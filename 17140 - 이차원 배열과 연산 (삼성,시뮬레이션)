package com.core.hello;
import java.util.*;
class Main{
    static class T implements Comparable<T>{
        int num;
        int cnt;
        T(int num, int cnt){
            this.num = num;
            this.cnt = cnt;
        }
        @Override
        public int compareTo(T o) {
            if(this.cnt < o.cnt)
                return -1;
            else if(this.cnt > o.cnt)
                return 1;
            else{
                if(this.num < o.num)
                    return -1;
                else if(this.num > o.num)
                    return 1;
            }
            return 0;
        }
    }
    static int n, m, k;
    static int[][] arr;
    static int[] count = new int[101];
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        n = scan.nextInt();
        m = scan.nextInt();
        k = scan.nextInt();
        int x = 3;
        int y = 3;
        arr = new int[101][101];
        for(int i = 0; i < x; i++){
            for(int j = 0; j < y; j++){
                arr[i][j] = scan.nextInt();
            }
        }
        int t;
        for(t = 0; t <= 100; t++){
            if(arr[n - 1][m - 1] == k)
                break;
            LinkedList<T> list = new LinkedList<>();
            if(x >= y){
                //R연산
                int Rsize = 0;
                for(int i = 0; i < x; i++){
                    for(int j = 0; j < y; j++){
                        count[arr[i][j]]++;
                        arr[i][j] = 0;
                    }
                    for(int z = 1; z < count.length; z++){
                        if(count[z] != 0)
                            list.add(new T(z, count[z]));
                    }
                    Collections.sort(list);
                    int index = 0;
                    for(T now : list){
                        arr[i][index++] = now.num;
                        arr[i][index++] = now.cnt;
                    }
                    if(Rsize <= index)
                        Rsize = index;
                    list.clear();
                    Arrays.fill(count, 0);
                }
                y = Rsize;
            }
            else{
                //C연산
                int Csize = 0;
                for(int i = 0; i < y; i++){
                    for(int j = 0; j < x; j++){
                        count[arr[j][i]]++;
                        arr[j][i] = 0;
                    }
                    for(int z = 1; z < count.length; z++){
                        if(count[z] != 0)
                            list.add(new T(z, count[z]));
                    }
                    Collections.sort(list);
                    int index = 0;
                    for(T now : list){
                        arr[index++][i] = now.num;
                        arr[index++][i] = now.cnt;
                    }
                    if(Csize <= index)
                        Csize = index;
                    list.clear();
                    Arrays.fill(count, 0);
                }
                x = Csize;
            }
        }
        if(t == 101)
            t = -1;
        System.out.println(t);
    }
}
